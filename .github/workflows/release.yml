name: Build and Release

permissions:
  contents: write
  id-token: write
  packages: write

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送符合版本标签的代码时触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 检出代码

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'  # 设置 Go 版本为 1.23
          cache: true

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o jwt-brute-force-tool-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o jwt-brute-force-tool-linux-arm64

      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o jwt-brute-force-tool-windows-amd64.exe
          GOOS=windows GOARCH=arm64 go build -o jwt-brute-force-tool-windows-arm64.exe

      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o jwt-brute-force-tool-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o jwt-brute-force-tool-darwin-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}  # 使用当前推送的标签
          files: |
            jwt-brute-force-tool-linux-amd64
            jwt-brute-force-tool-linux-arm64
            jwt-brute-force-tool-windows-amd64.exe
            jwt-brute-force-tool-windows-arm64.exe
            jwt-brute-force-tool-darwin-amd64
            jwt-brute-force-tool-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token 进行认证
