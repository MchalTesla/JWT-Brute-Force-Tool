name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送符合版本标签的代码时触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 运行环境

    strategy:
      matrix:
        os: [linux, windows, darwin]  # OS 列表
        arch: [amd64, arm64]           # 支持的架构

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 检出代码

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'  # 设置 Go 版本

      - name: Build
        run: |
          if [[ "${{ matrix.os }}" == "linux" ]]; then
            GOOS=linux GOARCH=${{ matrix.arch }} go build -o jwt-brute-force-tool-linux-${{ matrix.arch }}
          elif [[ "${{ matrix.os }}" == "windows" ]]; then
            GOOS=windows GOARCH=${{ matrix.arch }} go build -o jwt-brute-force-tool-windows-${{ matrix.arch }}.exe
          elif [[ "${{ matrix.os }}" == "darwin" ]]; then
            GOOS=darwin GOARCH=${{ matrix.arch }} go build -o jwt-brute-force-tool-darwin-${{ matrix.arch }}
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ github.ref }}  # 使用当前推送的标签
          files: |
            jwt-brute-force-tool-linux-amd64
            jwt-brute-force-tool-linux-arm64
            jwt-brute-force-tool-windows-amd64.exe
            jwt-brute-force-tool-windows-arm64.exe
            jwt-brute-force-tool-darwin-amd64
            jwt-brute-force-tool-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token 进行认证
